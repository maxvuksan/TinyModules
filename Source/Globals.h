#pragma once
#include <JuceHeader.h>

// short hand for leak detection, should be placed on juce::Components in private:
#define SAFE_UI_COMPONENT(CLASSNAME) JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(CLASSNAME)

#define GLOBAL_FILE_EXTENSION ".tmpatch"

#define GLOBAL_COMPONENT_PADDING_Y	6
#define GLOBAL_COMPONENT_PADDING_X	0
#define GLOBAL_COMPONENT_Y_SHIFT	0

#define GLOBAL_COMPONENT_HEIGHT		58
#define GLOBAL_COMPONENT_WIDTH		48

#define GLOBAL_BLOCK_HEIGHT			((GLOBAL_COMPONENT_HEIGHT + GLOBAL_COMPONENT_PADDING_Y) * 7 + GLOBAL_COMPONENT_PADDING_Y)
#define GLOBAL_BLOCK_HEIGHT_PADDING			30

#define GLOBAL_BLOCK_WIDTH_UNIT		(GLOBAL_COMPONENT_WIDTH + GLOBAL_COMPONENT_PADDING_X * 2)

#define GLOBAL_COMPONENT_GRID_POS_X (GLOBAL_COMPONENT_WIDTH + GLOBAL_COMPONENT_PADDING_X * 2)
#define GLOBAL_COMPONENT_GRID_POS_Y	(GLOBAL_COMPONENT_HEIGHT + GLOBAL_COMPONENT_PADDING_Y) + GLOBAL_COMPONENT_PADDING_Y - GLOBAL_COMPONENT_Y_SHIFT + GLOBAL_BLOCK_HEIGHT_PADDING

#define GLOBAL_RACK_WIDTH			80
#define GLOBAL_RACK_HEGHT			10

#define GLOBAL_WIRE_SAG				0.4f

const std::vector<juce::Colour> GLOBAL_WIRE_COLOUR_POOL = {
	juce::Colour::fromRGB(255, 56, 112),
	juce::Colour::fromRGB(56, 156, 255),
	juce::Colour::fromRGB(240, 152, 53),
	juce::Colour::fromRGB(132, 92, 242)
};

#define GLOBAL_C4_FREQUENCY			261.63f

#define GLOBAL_BG_COLOUR juce::Colour::fromRGB(182, 184, 192)
#define GLOBAL_BG_COLOUR_DARK juce::Colour::fromRGB(160, 161, 172)
#define GLOBAL_LIGHT_COLOUR juce::Colour::fromRGB(255,255,255) // white
#define GLOBAL_DARK_COLOUR juce::Colour::fromRGB(72, 68, 99)